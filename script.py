# Form implementation generated from reading ui file 'E:\PythonProgramming\detect_components_yolov11x_v3\script.ui'
#
# Created by: PyQt6 UI code generator 6.8.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1003, 635)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.video_label = QtWidgets.QLabel(parent=self.centralwidget)
        self.video_label.setGeometry(QtCore.QRect(50, 40, 391, 241))
        self.video_label.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.video_label.setAutoFillBackground(True)
        self.video_label.setText("")
        self.video_label.setObjectName("video_label")
        self.capture_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.capture_button.setGeometry(QtCore.QRect(500, 100, 121, 50))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(-1)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(75)
        font.setStrikeOut(False)
        font.setKerning(True)
        self.capture_button.setFont(font)
        self.capture_button.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.capture_button.setStyleSheet("QPushButton {\n"
"    background-color: #00A8E8;\n"
"    color: white;\n"
"    border-radius: 5px;\n"
"    padding: 5px 10px;\n"
"    font-size: 14px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #0077B6;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #005F87;\n"
"}\n"
"")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("E:\\PythonProgramming\\detect_components_yolov11x_v3\\ui_graphics/scan.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        icon.addPixmap(QtGui.QPixmap("E:\\PythonProgramming\\detect_components_yolov11x_v3\\ui_graphics/scan_hold.png"), QtGui.QIcon.Mode.Active, QtGui.QIcon.State.On)
        self.capture_button.setIcon(icon)
        self.capture_button.setIconSize(QtCore.QSize(45, 45))
        self.capture_button.setObjectName("capture_button")
        self.result_label = QtWidgets.QLabel(parent=self.centralwidget)
        self.result_label.setGeometry(QtCore.QRect(50, 320, 391, 241))
        self.result_label.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.result_label.setAutoFillBackground(True)
        self.result_label.setText("")
        self.result_label.setObjectName("result_label")
        self.label = QtWidgets.QLabel(parent=self.centralwidget)
        self.label.setGeometry(QtCore.QRect(0, -10, 1001, 621))
        self.label.setStyleSheet("QWidget {\n"
"    background-color: #0A192F; /* Xanh đậm */\n"
"}")
        self.label.setText("")
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        self.result_tree = QtWidgets.QTreeWidget(parent=self.centralwidget)
        self.result_tree.setGeometry(QtCore.QRect(480, 200, 351, 341))
        self.result_tree.setStyleSheet("/* Header (Tiêu đề cột) */\n"
"QHeaderView::section {\n"
"    background-color: #1B263B;\n"
"    color: white;\n"
"    padding: 6px;\n"
"    border: none;\n"
"    font-weight: bold;\n"
"    text-align: center; /* Căn giữa tiêu đề */\n"
"    border-radius: 6px;\n"
"\n"
"}\n"
"/*\n"
"QHeaderView::section {\n"
"    background-color: #1B263B;\n"
"    color: white;\n"
"    padding: 6px;\n"
"    border: 1px solid #415A77;\n"
"    font-weight: bold;\n"
"    text-align: center;\n"
"    border-radius: 6px;\n"
"}\n"
"*/\n"
"/* Tree Widget */\n"
"QTreeWidget {\n"
"    background-color: #E0E1DD;\n"
"    color: #0D1B2A;\n"
"    border: 2px solid #1B263B;\n"
"    border-radius: 8px;\n"
"    padding: 6px;\n"
"}\n"
"\n"
"/* Hàng trong Tree */\n"
"QTreeWidget::item {\n"
"    background-color: #E0E1DD;\n"
"    border-radius: 4px;\n"
"    padding: 4px;\n"
"    border-bottom: 1px solid #D0D0D0;\n"
"\n"
"}\n"
"\n"
"\n"
"/* Hàng được chọn */\n"
"\n"
"QTreeWidget::item:selected {\n"
"    background-color: #E0E1DD;\n"
"    border-radius: 4px;\n"
"    padding: 4px;\n"
"    border-bottom: 1px solid #D0D0D0;\n"
"}")
        self.result_tree.setObjectName("result_tree")
        item_0 = QtWidgets.QTreeWidgetItem(self.result_tree)
        item_0 = QtWidgets.QTreeWidgetItem(self.result_tree)
        item_0 = QtWidgets.QTreeWidgetItem(self.result_tree)
        item_0 = QtWidgets.QTreeWidgetItem(self.result_tree)
        item_0 = QtWidgets.QTreeWidgetItem(self.result_tree)
        item_0 = QtWidgets.QTreeWidgetItem(self.result_tree)
        item_0 = QtWidgets.QTreeWidgetItem(self.result_tree)
        item_0 = QtWidgets.QTreeWidgetItem(self.result_tree)
        item_0 = QtWidgets.QTreeWidgetItem(self.result_tree)
        item_0 = QtWidgets.QTreeWidgetItem(self.result_tree)
        self.result_icon_label = QtWidgets.QLabel(parent=self.centralwidget)
        self.result_icon_label.setGeometry(QtCore.QRect(870, 300, 100, 100))
        self.result_icon_label.setText("")
        self.result_icon_label.setObjectName("result_icon_label")
        self.label_2 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(50, 10, 131, 31))
        self.label_2.setStyleSheet("\n"
"QLabel {\n"
"    color: white;\n"
"    font-size: 16px;\n"
"    font-weight: bold;\n"
"    background-color: transparent;\n"
"}\n"
"\n"
"\n"
"QTableWidget {\n"
"    background-color: #d3d3d3;\n"
"    border-radius: 5px;\n"
"    gridline-color: black;\n"
"}\n"
"\n"
"QPushButton {\n"
"    background-color: #007acc;\n"
"    color: white;\n"
"    font-size: 14px;\n"
"    font-weight: bold;\n"
"    border-radius: 5px;\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #005f99;\n"
"}\n"
"")
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(50, 290, 151, 31))
        self.label_3.setStyleSheet("QLabel {\n"
"    color: white;\n"
"    font-size: 16px;\n"
"    font-weight: bold;\n"
"    background-color: transparent;\n"
"}\n"
"\n"
"QTableWidget {\n"
"    background-color: #d3d3d3;\n"
"    border-radius: 5px;\n"
"    gridline-color: black;\n"
"}\n"
"\n"
"QPushButton {\n"
"    background-color: #007acc;\n"
"    color: white;\n"
"    font-size: 14px;\n"
"    font-weight: bold;\n"
"    border-radius: 5px;\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #005f99;\n"
"}\n"
"")
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(860, 20, 101, 71))
        self.label_4.setText("")
        self.label_4.setPixmap(QtGui.QPixmap("E:\\PythonProgramming\\detect_components_yolov11x_v3\\ui_graphics/Logo-GTVT.png"))
        self.label_4.setScaledContents(True)
        self.label_4.setObjectName("label_4")
        self.tuning_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.tuning_button.setGeometry(QtCore.QRect(670, 100, 121, 50))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(-1)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(75)
        font.setStrikeOut(False)
        font.setKerning(True)
        self.tuning_button.setFont(font)
        self.tuning_button.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.tuning_button.setStyleSheet("QPushButton {\n"
"    background-color: #00A8E8;\n"
"    color: white;\n"
"    border-radius: 5px;\n"
"    padding: 5px 10px;\n"
"    font-size: 14px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #0077B6;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #005F87;\n"
"}\n"
"")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("E:\\PythonProgramming\\detect_components_yolov11x_v3\\ui_graphics/tuning.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.tuning_button.setIcon(icon1)
        self.tuning_button.setIconSize(QtCore.QSize(45, 45))
        self.tuning_button.setObjectName("tuning_button")
        self.label.raise_()
        self.video_label.raise_()
        self.capture_button.raise_()
        self.result_label.raise_()
        self.result_tree.raise_()
        self.result_icon_label.raise_()
        self.label_2.raise_()
        self.label_3.raise_()
        self.label_4.raise_()
        self.tuning_button.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1003, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "PCB automation test"))
        self.capture_button.setText(_translate("MainWindow", "Scan"))
        self.result_tree.headerItem().setText(0, _translate("MainWindow", "   Components"))
        self.result_tree.headerItem().setText(1, _translate("MainWindow", "   Requirement"))
        self.result_tree.headerItem().setText(2, _translate("MainWindow", "             Result"))
        __sortingEnabled = self.result_tree.isSortingEnabled()
        self.result_tree.setSortingEnabled(False)
        self.result_tree.topLevelItem(0).setText(0, _translate("MainWindow", "MCU"))
        self.result_tree.topLevelItem(0).setText(1, _translate("MainWindow", "          1"))
        self.result_tree.topLevelItem(1).setText(0, _translate("MainWindow", "Res"))
        self.result_tree.topLevelItem(1).setText(1, _translate("MainWindow", "          9"))
        self.result_tree.topLevelItem(2).setText(0, _translate("MainWindow", "Cap"))
        self.result_tree.topLevelItem(2).setText(1, _translate("MainWindow", "          5"))
        self.result_tree.topLevelItem(3).setText(0, _translate("MainWindow", "Button"))
        self.result_tree.topLevelItem(3).setText(1, _translate("MainWindow", "          1"))
        self.result_tree.topLevelItem(4).setText(0, _translate("MainWindow", "Header-dip"))
        self.result_tree.topLevelItem(4).setText(1, _translate("MainWindow", "          2"))
        self.result_tree.topLevelItem(5).setText(0, _translate("MainWindow", "Mosfet"))
        self.result_tree.topLevelItem(5).setText(1, _translate("MainWindow", "          2"))
        self.result_tree.topLevelItem(6).setText(0, _translate("MainWindow", "HT7333"))
        self.result_tree.topLevelItem(6).setText(1, _translate("MainWindow", "          1"))
        self.result_tree.topLevelItem(7).setText(0, _translate("MainWindow", "Diode"))
        self.result_tree.topLevelItem(7).setText(1, _translate("MainWindow", "          1"))
        self.result_tree.topLevelItem(8).setText(0, _translate("MainWindow", "Sensor"))
        self.result_tree.topLevelItem(8).setText(1, _translate("MainWindow", "          1"))
        self.result_tree.topLevelItem(9).setText(0, _translate("MainWindow", "Header-smd"))
        self.result_tree.topLevelItem(9).setText(1, _translate("MainWindow", "          1"))
        self.result_tree.setSortingEnabled(__sortingEnabled)
        self.label_2.setText(_translate("MainWindow", "Camera Stream"))
        self.label_3.setText(_translate("MainWindow", "Detection Results"))
        self.tuning_button.setText(_translate("MainWindow", "Tuning"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
